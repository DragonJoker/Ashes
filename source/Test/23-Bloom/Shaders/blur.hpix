Texture2D colorMap : register(t0);
SamplerState colorSampler : register(s0);

cbuffer Config : register(b1)
{
	float2 inTextureSize;
	uint inCoefficientsCount;
	uint inDump;
	float4 inCoefficients[15];
};

cbuffer Direction : register(b2)
{
	int blurDirection;
};

struct PixelInput
{
	float2 inUV : TEXCOORD;
};

float4 mainPx( in PixelInput input ) : SV_TARGET
{
	float2 base = float2( 1.0, 0 ) / inTextureSize;

	if ( blurDirection == 1 )
	{
		base = float2( 0.0, 1.0 ) / inTextureSize;
	}

	float2 offset = float2( 0.0, 0.0 );
	float4 result = inCoefficients[0][0] * colorMap.Sample( colorSampler, input.inUV );

	for ( uint i = 1u; i < inCoefficientsCount; ++i )
	{
		offset += base;
		result += inCoefficients[i / 4u][i % 4u] * colorMap.Sample( colorSampler, input.inUV - offset );
		result += inCoefficients[i / 4u][i % 4u] * colorMap.Sample( colorSampler, input.inUV + offset );
	}

	return result;
}
