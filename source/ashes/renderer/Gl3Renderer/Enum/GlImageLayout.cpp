#include "GlRendererPrerequisites.hpp"

namespace ashes::gl3
{
	std::string getName( GlImageLayout value )
	{
		switch ( value )
		{
		case GL_LAYOUT_UNDEFINED_EXT:
			return "GL_LAYOUT_UNDEFINED_EXT";

		case GL_LAYOUT_GENERAL_EXT:
			return "GL_LAYOUT_GENERAL_EXT";

		case GL_LAYOUT_COLOR_ATTACHMENT_EXT:
			return "GL_LAYOUT_COLOR_ATTACHMENT_EXT";

		case GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT:
			return "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT";

		case GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT:
			return "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT";

		case GL_LAYOUT_SHADER_READ_ONLY_EXT:
			return "GL_LAYOUT_SHADER_READ_ONLY_EXT";

		case GL_LAYOUT_TRANSFER_SRC_EXT:
			return "GL_LAYOUT_TRANSFER_SRC_EXT";

		case GL_LAYOUT_TRANSFER_DST_EXT:
			return "GL_LAYOUT_TRANSFER_DST_EXT";

		default:
			assert( false && "Unsupported GlImageLayout" );
			return "GlImageLayout_UNKNOWN";
		}
	}

	GlImageLayout convert( VkImageLayout layout )
	{
		switch ( layout )
		{
		case VK_IMAGE_LAYOUT_UNDEFINED:
		case VK_IMAGE_LAYOUT_PREINITIALIZED:
		case VK_IMAGE_LAYOUT_PRESENT_SRC_KHR:
			return GL_LAYOUT_UNDEFINED_EXT;

		case VK_IMAGE_LAYOUT_GENERAL:
			return GL_LAYOUT_GENERAL_EXT;

		case VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL:
			return GL_LAYOUT_COLOR_ATTACHMENT_EXT;

		case VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL:
			return GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT;

		case VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL:
			return GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT;

		case VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL:
			return GL_LAYOUT_SHADER_READ_ONLY_EXT;

		case VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL:
			return GL_LAYOUT_TRANSFER_SRC_EXT;

		case VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL:
			return GL_LAYOUT_TRANSFER_DST_EXT;

		default:
			assert( false && "Unsupported image layout" );
			return GL_LAYOUT_UNDEFINED_EXT;
		}
	}

	VkImageLayout convertImageLayout( GlImageLayout layout )
	{
		switch ( layout )
		{
		case GL_LAYOUT_UNDEFINED_EXT:
			return VK_IMAGE_LAYOUT_UNDEFINED;

		case GL_LAYOUT_GENERAL_EXT:
			return VK_IMAGE_LAYOUT_GENERAL;

		case GL_LAYOUT_COLOR_ATTACHMENT_EXT:
			return VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;

		case GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT:
			return VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL;

		case GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT:
			return VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL;

		case GL_LAYOUT_SHADER_READ_ONLY_EXT:
			return VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;

		case GL_LAYOUT_TRANSFER_SRC_EXT:
			return VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL;

		case GL_LAYOUT_TRANSFER_DST_EXT:
			return VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL;

		default:
			assert( false && "Unsupported image layout" );
			return VK_IMAGE_LAYOUT_UNDEFINED;
		}
	}
}

